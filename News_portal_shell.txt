

from news.models import *

us1 = User.objects.create_user(username='Misha')
us2 = User.objects.create_user(username='Sergey')
us3 = User.objects.create_user(username='Anatoly')
us4 = User.objects.create_user(username='Valentin')

author1 = Author.objects.create(user=us1)
author2 = Author.objects.create(user=us3)


Добавить 4 категории в модель Category.

cat1 = Category.objects.create(name='Digital')
cat2 = Category.objects.create(name='Analog')
cat3 = Category.objects.create(name='Power')
cat4 = Category.objects.create(name='Discrete')

Добавить 2 статьи и 1 новость.
post1 = Post.objects.create(text='Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст Первая Статья Текст ', author=author1, type='AR', text_header='Заголовок первой статьи')

post2 = Post.objects.create(text='Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст Вторая Статья Текст ', author=author2, type='AR', text_header='Заголовок второй статьи')

post3 = Post.objects.create(text='Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст Первая Новость Текст ', author=author1, type='NW', text_header='Заголовок первой новости')

Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
pc1 = PostCategory.objects.create(postThrough=Post.objects.get(pk=1), categoryThrough=Category.objects.get(pk=1))
pc2 = PostCategory.objects.create(postThrough=Post.objects.get(pk=1), categoryThrough=Category.objects.get(pk=2))
pc3 = PostCategory.objects.create(postThrough=Post.objects.get(pk=2), categoryThrough=Category.objects.get(pk=4))
pc4 = PostCategory.objects.create(postThrough=Post.objects.get(pk=3), categoryThrough=Category.objects.get(pk=3))

Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
com1 = Comment.objects.create(commentPost=Post.objects.get(pk=1), commentUser=User.objects.get(pk=1), text='Первый комментарий')
com2 = Comment.objects.create(commentPost=Post.objects.get(pk=2), commentUser=User.objects.get(pk=3), text='Второй комментарий')
com3 = Comment.objects.create(commentPost=Post.objects.get(pk=3), commentUser=User.objects.get(pk=2), text='Третий комментарий')
com4 = Comment.objects.create(commentPost=Post.objects.get(pk=2), commentUser=User.objects.get(pk=1), text='Четвертый комментарий')




Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
post1.like()
post1.rating

post2.like()
post2.like()
post2.like()
post2.like()
post2.like()
post2.like()

post3.like()
post3.like()
post3.like()
post3.like()
post3.like()
post3.like()
post3.dislike()


for i in range(1,10):
    com1.like()

for i in range(1,5):
    com1.dislike()

for i in range(1,25):
    com2.like()

for i in range(1,5):
    com2.dislike()

for i in range(1,100):
    com3.like()

for i in range(1,15):
    com3.dislike()

for i in range(1,40):
    com4.like()

for i in range(1,30):
    com4.dislike()

for i in range(1,3):
    com4.like()

for i in range(1,30):
    com4.dislike()

author1.ratingAuthor
author1.update_rating()
author1.ratingAuthor

author2.ratingAuthor
author2.update_rating()
author2.ratingAuthor

Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

AuthorLeader = Author.objects.order_by('-ratingAuthor')[:1]
for i in AuthorLeader:
    i.ratingAuthor
    i.user.username

Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
articleBest = Post.objects.filter(type='AR').order_by('-rating')[:1]
articleBest_id = Post.objects.filter(type='AR').order_by('-rating').values('id')[:1]

articleBestpreview = Post.objects.get(id=articleBest_id[0]['id']).preview()

articleBestpreview
for i in articleBest:
    i.time_create
    i.author.user.username
    i.rating
    i.text_header




Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
commentsToBestArticle = Comment.objects.filter(commentPost_id=articleBest_id[0]['id'])

for i in commentsToBestArticle:
    i.time_create
    i.commentUser.username
    i.rating
    i.text




